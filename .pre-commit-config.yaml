# Leka - iOS Monorepo
# Copyright APF France handicap
# SPDX-License-Identifier: Apache-2.0

# ? See https://pre-commit.com for more information
# ? See https://pre-commit.com/hooks.html for more hooks
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-added-large-files
      - id: check-case-conflict
      - id: check-executables-have-shebangs
      - id: check-merge-conflict
      - id: check-shebang-scripts-are-executable
      - id: check-symlinks
      - id: detect-private-key
      - id: end-of-file-fixer
        exclude_types: [json]
        exclude: '(.*\.xcstrings|\.xcassets|\.svg)'
      - id: forbid-submodules
      - id: mixed-line-ending
      - id: no-commit-to-branch
        args: [--branch, main, --branch, develop]
      - id: trailing-whitespace
      - id: check-yaml
        exclude: exercise_templates.yml
      - id: check-json
        types: [file]
        files: \.(json|xcstrings)$
        exclude: '(.*\.xcassets/.*\.json$)'
      - id: pretty-format-json
        args: ["--autofix", "--indent=4", "--top-keys=version,sourceLanguage"]
        types: [file]
        files: \.(json|xcstrings)$
        exclude: '(\.vscode/settings\.json|\.jtd\.json$|.*\.xcassets/.*|.*\.colorset/.*|\.animation\.lottie\.json$)'

  - repo: https://github.com/realm/SwiftLint
    rev: 0.57.0
    hooks:
      - id: swiftlint
        entry: swiftlint
        args: ["--use-alternative-excluding"]

  - repo: https://github.com/nicklockwood/SwiftFormat
    rev: 0.54.5
    hooks:
      - id: swiftformat

  - repo: local
    hooks:
      - id: check_xcstrings
        name: Check .xcstrings files for stale entries and unusual characters
        description: This hook checks .xcstrings files for stale entries and unusual characters
        entry: python3 Tools/Hooks/check_xcstrings.py
        language: python
        additional_dependencies: ["pygments"]
        files: '.*\.xcstrings'

      - id: check_yaml_definitions_avatars
        name: Check avatars.yml
        description: |
          This hook checks avatars.yml for:
            - non unique ids
            - jtd schema validation
            - filename and image consistency
          It also formats the file
        entry: python3 Tools/Hooks/check_yaml_definitions_avatars.py
        language: python
        additional_dependencies: ["ruamel.yaml"]
        files: avatars.yml

      - id: check_yaml_definitions_professions
        name: Check professions.yml
        description: |
          This hook checks professions.yml for:
            - non unique ids
            - jtd schema validation
          It also formats the file and sorts the entries
        entry: python3 Tools/Hooks/check_yaml_definitions_professions.py
        language: python
        additional_dependencies: ["ruamel.yaml"]
        files: professions.yml

      - id: check_yaml_definitions_authors
        name: Check authors.yml
        description: |
          This hook checks authors.yml for:
            - non unique ids
            - jtd schema validation
          It also formats the file and sorts the entries
        entry: python3 Tools/Hooks/check_yaml_definitions_authors.py
        language: python
        additional_dependencies: ["ruamel.yaml"]
        files: authors.yml

      - id: check_yaml_definitions_skills
        name: Check skills.yml
        description: |
          This hook checks skills.yml for:
            - non unique ids
            - jtd schema validation
          It also formats the file and sorts the entries
        entry: python3 Tools/Hooks/check_yaml_definitions_skills.py
        language: python
        additional_dependencies: ["ruamel.yaml"]
        files: skills.yml

      - id: check_yaml_definitions_robot_assets
        name: Check robot_assets.yml
        description: |
          This hook checks robot_assets.yml for:
            - non unique ids
            - jtd schema validation
          It also formats the file and sorts the entries
        entry: python3 Tools/Hooks/check_yaml_definitions_robot_assets.py
        language: python
        additional_dependencies: ["ruamel.yaml"]
        files: robot_assets.yml

      - id: check_yaml_definitions_tags
        name: Check tags.yml
        description: |
          This hook checks tags.yml for:
            - non unique ids
            - jtd schema validation
          It also formats the file and sorts the entries
        entry: python3 Tools/Hooks/check_yaml_definitions_tags.py
        language: python
        additional_dependencies: ["ruamel.yaml"]
        files: tags.yml

      - id: check_yaml_content_activities
        name: Check activity.yml files
        description: |
          This hook checks activity.yml files for:
            - uuid and filename consistency
            - jtd schema validation
        entry: python3 Tools/Hooks/check_yaml_content_activities.py
        language: python
        additional_dependencies: ["ruamel.yaml"]
        files: .*\.activity\.yml
        types: [yaml]

      - id: check_yaml_content_activities_unique_uuid
        name: Check activity.yml files for unique uuid
        description: |
          This hook checks activity.yml files for unique uuid
        entry: python3 Tools/Hooks/check_yaml_content_activities_unique_uuid.py
        language: python
        files: .*\.activity\.yml
        types: [yaml]
        pass_filenames: false

      - id: check_yaml_content_activities_assets
        name: Check activity.asset.* files
        description: |
          This hook checks activity.asset.* files for:
            - duplicates
        entry: python3 Tools/Hooks/check_yaml_content_activities_assets.py
        language: python
        pass_filenames: false
        always_run: true

      - id: check_yaml_content_curriculums
        name: Check curriculum.yml files
        description: |
          This hook checks curriculum.yml files for:
            - uuid and filename consistency
            - jtd schema validation
        entry: python3 Tools/Hooks/check_yaml_content_curriculums.py
        language: python
        additional_dependencies: ["ruamel.yaml"]
        files: .*\.curriculum\.yml
        types: [yaml]

      - id: check_yaml_content_curriculums_unique_uuid
        name: Check curriculum.yml files for unique uuid
        description: |
          This hook checks curriculum.yml files for unique uuid
        entry: python3 Tools/Hooks/check_yaml_content_curriculums_unique_uuid.py
        language: python
        files: .*\.curriculum\.yml
        types: [yaml]
        pass_filenames: false

      - id: check_yaml_content_stories
        name: Check story.yml files
        description: |
          This hook checks story.yml files for:
            - uuid and filename consistency
            - jtd schema validation
        entry: python3 Tools/Hooks/check_yaml_content_stories.py
        language: python
        additional_dependencies: ["ruamel.yaml"]
        files: .*\.story\.yml
        types: [yaml]

      - id: check_yaml_content_stories_unique_uuid
        name: Check story.yml files for unique uuid
        description: |
          This hook checks story.yml files for unique uuid
        entry: python3 Tools/Hooks/check_yaml_content_stories_unique_uuid.py
        language: python
        files: .*\.story\.yml
        types: [yaml]
        pass_filenames: false
